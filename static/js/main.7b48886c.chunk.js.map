{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","for","Textform","useState","text","setText","style","color","heading","value","background","onChange","event","target","rows","newtext","toUpperCase","showAlert","toLowerCase","anchor","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","darkMode","setDarkMode","setAlert","message","setTimeout","aboutText","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b48886c.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                </li>\n                {/* <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                </li>\n                 */}\n              </ul>\n              {/* <form className=\"d-flex\">\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n              </form> */}\n\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark': 'light'}`}>\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\n              <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">{props.mode==='light'?'Light Mode Enabled': 'Dark Mode Enbled'}</label>\n            </div>\n            </div>\n          </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string,\n    aboutText: PropTypes.string\n}\n","import React ,{useState} from 'react'\n\nexport default function Textform(props) {\n    const handleUpCase = () =>{\n        let newtext = text.toUpperCase(text)\n        setText(newtext)\n        props.showAlert(\"Converted to uppercase\", \"success\")\n    }\n\n    const handleLowCase = () =>{\n        let newtext = text.toLowerCase(text)\n        setText(newtext)\n        props.showAlert(\"Converted to lowercase\", \"success\")\n\n    }\n\n    const handleClearText = () =>{\n        let newtext = ''\n        setText(newtext)\n        props.showAlert(\"clear text\", \"success\")\n\n    }\n\n    const handleAddAnchorTag = () =>{\n        let newtext = text.anchor(text)\n        setText(newtext)\n    }\n\n    \n    const handleOnchange = (event) =>{\n        setText(event.target.value)\n    }\n\n\n    const [text, setText] = useState(\"\");\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white': 'black'}}>\n            <h1> {props.heading}</h1>\n            <div className=\"mb-3\">\n                \n                <textarea className=\"form-control\" value={text} style={{background: props.mode==='dark'?'gray': 'white', color: props.mode==='dark'?'white': 'black'}} onChange={handleOnchange} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\n            </div>\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpCase} >Convert to uppercases</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowCase} >Convert to lowercase</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearText} >Clear</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handleAddAnchorTag} >Add Anchor Tag</button>\n\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white': 'black'}}>\n            <h1>Your Test Summery</h1>\n            <p>{text.split(\" \").length} words ,{text.length} Chareters</p>\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\n            <h2>Preview of text</h2>\n            <p>{text.length > 0 ? text: 'For preview enter text'}</p>\n        </div>\n\n        </>\n\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}: </strong>{props.alert.msg}\n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    },1500)\n  }\n  const toggleMode= ()=>{\n    if(darkMode === 'light'){\n      setDarkMode('dark');\n      document.body.style.backgroundColor = '#31096a'\n      showAlert(\"Dark Mode Enabled !\", \"success\")\n    } else {\n      setDarkMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode Enabled !\", \"success\")\n\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Mukesh CodeLearn\" aboutText=\"About Us\" mode={darkMode} toggleMode={toggleMode}/>\n      <Alert alert={alert} />\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n            <div className=\"container my-3\">\n              <Textform showAlert={showAlert} heading=\"Enter the text here\" mode={darkMode}/>\n            </div>\n          {/* </Route>\n      </Switch>\n      </Router> */}\n    \n      \n     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}